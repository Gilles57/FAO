{% extends 'base.html.twig' %}

{% block title %} Carte interactive{% endblock %}

{% block stylesheets %}
    <!-- Nous chargeons les fichiers CDN de Leaflet. Le CSS AVANT le JS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css"
          integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ=="
          crossorigin=""/>
    <style type="text/css">
        #map { /* la carte DOIT avoir une hauteur sinon elle n'apparaît pas */
            height: 600px;
        }
    </style>
{% endblock %}
{% block body %}

    {{ parent() }}
    <div class="contenu1">
        <div id="map">
            <!-- Ici s'affichera la carte -->
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js"
            integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw=="
            crossorigin=""></script>

    <script type="text/javascript">
        $(function () {
            var villes = {{ villes|raw }};
            var lat = 0;
            var lon = 0;

            var nb_villes = Object.keys(villes).length;

            // On initialise la latitude et la longitude du centre de la carte
                var pref;
                for (var i = 1; i <= nb_villes; i++) {
                    if (villes[i].prefered === true) {
                        lat = villes[i]['lat'];
                        lon = villes[i]['lon'];
                        pref = i;
                    }
                }
            var ma_carte = null;

            // Fonction d'initialisation de la carte
            function initMap() {
                // Nous définissons le dossier qui contiendra les marqueurs
                const iconBase = '/images/';
                // Créer l'objet "ma_carte" et l'insèrer dans l'élément HTML qui a l'ID "map"
                ma_carte = L.map('map').setView([lat, lon], 10);
                // Leaflet ne récupère pas les cartes (tiles) sur un serveur par défaut. Nous devons lui préciser où nous souhaitons les récupérer. Ici, openstreetmap.fr
                L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
                    // Il est toujours bien de laisser le lien vers la source des données
                    attribution: 'données © <a href="//osm.org/copyright">OpenStreetMap</a>/ODbL - rendu <a href="//openstreetmap.fr">OSM France</a>',
                    minZoom: 1,
                    maxZoom: 20
                }).addTo(ma_carte);
                // Nous parcourons la liste des villes
                for (var ville in villes) {
                    // Nous définissons l'icône à utiliser pour le marqueur, sa taille affichée (iconSize), sa position (iconAnchor) et le décalage de son ancrage (popupAnchor)
                    if (ville === pref) {
                         myIcon = L.icon({
                            iconUrl: iconBase + "favicon1.png",
                            iconSize: [60, 60],
                            iconAnchor: [30, 30],
                            popupAnchor: [-3, -30],
                        });
                    }
                    else {
                         myIcon = L.icon({
                            iconUrl: iconBase + "favicon.ico",
                            iconSize: [30, 30],
                            iconAnchor: [15,15],
                            popupAnchor: [-3, -30],
                        });
                    }

                    var marker = L.marker([villes[ville].lat, villes[ville].lon], {icon: myIcon}).addTo(ma_carte);
                    marker.bindPopup(villes[ville].nom);
                    }
                }

                window.onload = function () {
                    // Fonction d'initialisation qui s'exécute lorsque le DOM est chargé
                    initMap();
                }
            }

        )
    </script>
{% endblock %}