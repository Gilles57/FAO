{% extends 'base.html.twig' %}

{% block title %}Carte interactive FAO TRAVEL !{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <!-- Nous chargeons les fichiers CDN de Leaflet. Le CSS AVANT le JS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.8.0/dist/leaflet.css"
          integrity="sha512-hoalWLoI8r4UszCkZ5kL8vayOGVae1oxXe/2A4AO6J9+580uKHDO3JdHb7NzwwzK5xr/Fs0W40kiNHxM9vyTtQ=="
          crossorigin=""/>
    <style>#map {
            height: 600px;
        }</style>
{% endblock %}

{% block body %}
    {% include 'home/_flash.html.twig' %}
    {% include 'home/_menu.html.twig' %}
    <div class="container">
        {% dump (villes) %}
        <div id="map" class="mt-4">
            <!-- Ici s'affichera la carte -->
        </div>
    </div>
    <p></p>
    {% include 'home/_footer.html.twig' %}

{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script src="https://unpkg.com/leaflet@1.8.0/dist/leaflet.js"
            integrity="sha512-BB3hKbKWOc9Ez/TAwyWxNXeoV9c1v6FIeYiBieIWkpLjauysF18NzgR1MBNBXf8/KABdlkX68nAhlwcDFLGPCQ=="
            crossorigin=""></script>

    <script type="text/javascript">
        function initMap() {
            let lat = 47.260751953373706;
            let lon = 6.045450869180901;
            let zoom = 6;
            let villes = {{ villes | raw }};

            {# // Nous définissons le dossier qui contiendra les marqueurs #}
            const iconBase = '/images/carte/';
            // Créer l'objet "ma_carte" et l'insérer dans l'élément HTML qui a l'ID "map"
            let map = L.map('map').setView([lat, lon], zoom);
            // Leaflet ne récupère pas les cartes (tiles) sur un serveur par défaut.
            // Nous devons lui préciser où nous souhaitons les récupérer. Ici, openstreetmap.fr
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                minZoom: 1,
                maxZoom: 19,
                attribution: '© OpenStreetMap'
            }).addTo(map);

            // Nous parcourons la liste des villes
            let myIcon;
            for (const ville of villes) {
                // Nous définissons l'icône à utiliser pour le marqueur, sa taille affichée (iconSize), sa position (iconAnchor) et le décalage de son ancrage (popupAnchor)
                console.log(ville)

                if (ville['preferred'] === true) {
                    myIcon = L.icon({
                        iconUrl: iconBase + "pin_green.webp",
                        iconSize: [60, 60],
                        iconAnchor: [30, 30],
                        popupAnchor: [-3, -30],
                    });
                } else {
                    myIcon = L.icon({
                        iconUrl: iconBase + "pin_grey.webp",
                        iconSize: [30, 30],
                        iconAnchor: [15, 15],
                        popupAnchor: [-3, -30],
                    });
                }

                var marker = L.marker([ville.lat, ville.lon], {icon: myIcon}).addTo(map);
                marker.bindPopup(ville.nom);
            }
        }

        window.onload = function () {
            // Fonction d'initialisation qui s'exécute lorsque le DOM est chargé
            initMap();
        }

    </script>
{% endblock %}


