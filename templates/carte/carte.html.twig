{% extends 'base.html.twig' %}

{% block title %}Carte interactive FAO TRAVEL !{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <!-- Nous chargeons les fichiers CDN de Leaflet. Le CSS AVANT le JS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.8.0/dist/leaflet.css"
          integrity="sha512-hoalWLoI8r4UszCkZ5kL8vayOGVae1oxXe/2A4AO6J9+580uKHDO3JdHb7NzwwzK5xr/Fs0W40kiNHxM9vyTtQ=="
          crossorigin=""/>

{% endblock %}

{% block body %}
        <div class="row vh-75" style="justify-content: center;">
            <div id="map" class="col-sm-12 col-lg-8 ">
                <!-- Ici s'affichera la carte -->
            </div>
            <div class="col-sm-12 col-lg-3 mx-3">
                <div class="row rounded-2  border border-primary ">
                    <p>Où suis-je ?</p>
                    <div class="row">
                        <div class="col-md-3 col-2 text-center">
                            <img src="{{ asset('images/carte/pin_grey.webp') }}" width="30px" alt="icon"></div>
                        <div class="col-md-9 col-10">
                            <p>C'est passé !</p>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-3 col-2 text-center">
                            <img src="{{ asset('images/carte/pin_green.webp') }}" width="30px" alt="icon"></div>
                        <div class="col-md-9 col-10">
                            <p>Je suis ici !</p>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-3 col-2 text-center">
                            <img src="{{ asset('images/carte/pin_red.webp') }}" width="30px"
                                 alt="icon"></div>
                        <div class="col-md-9 col-10">
                            <p>À venir</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3 col-2 text-center">
                            <img src="{{ asset('images/carte/pin.webp') }}" width="30px" alt="icon"></div>
                        <div class="col-md-9 col-10">
                            <p>En projet</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script src="https://unpkg.com/leaflet@1.8.0/dist/leaflet.js"
            integrity="sha512-BB3hKbKWOc9Ez/TAwyWxNXeoV9c1v6FIeYiBieIWkpLjauysF18NzgR1MBNBXf8/KABdlkX68nAhlwcDFLGPCQ=="
            crossorigin=""></script>

    <script type="text/javascript">
        function initMap() {
            let lat = 47.260751953373706;
            let lon = 3;
            let zoom = 6;
            if (screen.width < 300) {
                zoom = 4;
            } else if (screen.width < 400) {
                zoom = 5;
            } else if (screen.width < 700) {
                zoom = 5;
            }
            let villes = {{ cities | raw }};

            console.log('screen.width : ' + screen.width);
            console.log('zoom : ' + zoom);

            {# // Nous définissons le dossier qui contiendra les marqueurs #}
            const iconBase = '/images/carte/';
            // Créer l'objet "ma_carte" et l'insérer dans l'élément HTML qui a l'ID "map"
            let map = L.map('map').setView([lat, lon], zoom);
            // Leaflet ne récupère pas les cartes (tiles) sur un serveur par défaut.
            // Nous devons lui préciser où nous souhaitons les récupérer. Ici, openstreetmap.fr
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                minZoom: 1,
                maxZoom: 19,
                attribution: '© OpenStreetMap'
            }).addTo(map);

            // Nous parcourons la liste des villes
            let myIcon;
            let elts;
            for (const ville of villes) {

                // Nous définissons l'icône à utiliser pour le marqueur, sa taille affichée (iconSize), sa position (iconAnchor) et le décalage de son ancrage (popupAnchor)
                elts = ville.start.split('-')
                const begin = elts[2] + '-' + elts[1] + '-' + elts[0];

                if (ville['preferred'] === true) {
                    myIcon = L.icon({
                        iconUrl: iconBase + "pin_green.webp",
                        iconSize: [60, 60],
                        iconAnchor: [30, 30],
                        popupAnchor: [-3, -30],
                    });
                } else {
                    if (ville.start === '... ?') {
                        myIcon = L.icon({
                            iconUrl: iconBase + "pin.webp",
                            iconSize: [30, 30],
                            iconAnchor: [15, 15],
                            popupAnchor: [-3, -30],
                        });
                    } else if (Date.parse(begin) > Date.now()) {
                        myIcon = L.icon({
                            iconUrl: iconBase + "pin_red.webp",
                            iconSize: [30, 30],
                            iconAnchor: [15, 15],
                            popupAnchor: [-3, -30],
                        });
                    } else {
                        myIcon = L.icon({
                            iconUrl: iconBase + "pin_grey.webp",
                            iconSize: [30, 30],
                            iconAnchor: [15, 15],
                            popupAnchor: [-3, -30],
                        });
                    }
                }

                const marker = L.marker([ville.latitude, ville.longitude], {icon: myIcon}).addTo(map);
                marker.bindPopup('<p class="text-center"> ' + ville.nom + "<br />du " + ville.start + " au " + ville.end + '</p>');
            }
        }

        window.onload = function () {
            // Fonction d'initialisation qui s'exécute lorsque le DOM est chargé
            initMap();
        }

    </script>
{% endblock %}
